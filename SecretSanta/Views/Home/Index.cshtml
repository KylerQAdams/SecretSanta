@{
    ViewBag.Title = "Home Page";
}
<!--
    Only using simple and unoptimized HTML & JQuery to save time.
    Not the best design by a long shot, but a quick and usable one.
-->
<center>
    <h1>
        BACKGROUND
    </h1>
    <p>
        Secret Santa is a popular holiday tradition for a gift exchange within a group of people.
        Each person's name is written on a piece of paper and randomly selected one at a time by every person in the group to determine the recipient of their Secret Santa gift.
        However, physically drawing names is not always successful, since it is possible that a person could draw their own name or the name of their significant other.
        This simple web application solves that problem by allowing you to setup groups of people that cannot pick each other.
    </p>

    <center>
        <h2>
            USAGE INSTRUCTIONS
        </h2>
        <p>
            Every participant is put into a group -- even if the group only contains one participant.
            Groups are defined as a set of participants who are <b>not</b> suppose to be assigned one another as a gifter/recipient.
            Write the names of every participant in a single group in a single text box, seperated by a comma.
            Repeat this for every group.
            <br /><br />
            For example, if you had the following list of people:
            <ul style="list-style-type:none;">
                <li>John Snow</li>
                <li>Jane Snow</li>
                <li>Jenny Snow</li>
                <li>June Tobias</li>
                <li>Judith Tobias</li>
                <li>Jeremony Eins</li>
                <li>Janet</li>
            </ul>
            Then your input might end up looking like this:
            <br />
            <br />Participants Groups: <input name="sample" disabled="disabled" value="John Snow, Jane Snow, Jenny Snow" /> <br />
            <br />Participants Groups: <input name="sample" disabled="disabled" value="June Tobias, Judith Tobias" /> <br />
            <br />Participants Groups: <input name="sample" disabled="disabled" value="Jeremony Eins" /> <br />
            <br />Participants Groups: <input name="sample" disabled="disabled" value="Janet" /> <br />
            <br />
            As an alternative, you can also denonate the start of a separate groups in a single textbox by using a semi-colon.  For example:
            <br />
            <br />Participants Groups: <input name="sample" disabled="disabled" value="John Snow, Jane Snow, Jenny Snow;June Tobias, Judith Tobias;Jeremony Eins;Janet" /> <br />
        </p>
    </center>
    <h2>
        INPUT
    </h2>
    As you type in a textbox, another will be created.  There will always be at least one empty text box.
    <br />
    <div id="inputDiv">
        Participants Group: <input name="input" onkeyup="updateUI()" change="updateUI()" input="updateUI()" /> <br />
    </div>
    <button onclick="callSecretSantaService()">Generate Secret Santa List</button>
</center>
<br />
<br />
<br />
<table id="results"></table>

<script>

    // Adds extra inputs as the present ones get filled.
    // Will not bother to remove excess.
    function updateUI()
    {
        var addNewInput = true;
        $.each(document.getElementsByName('input'), function (index, input) {
            if (!input.value) {
                addNewInput = false;
                return false;
            }
        });
        if (addNewInput)
        {
            var div = $('#inputDiv');
            div.append("<br/>Participants Group: <input name=\"input\" onkeyup=\"updateUI()\" change=\"updateUI()\" input=\"updateUI()\"  /><br/>");
        }
    };


    // Trims text and removes empities in a string array.
    // Not really needed since this is also done server-side, but may as well.
    function cleanArray(array)
    {
        var cleanedArray = []
        $.each(array, function (index, item) {
            var cleaned = item.trim();
            if (cleaned !== '')
                cleanedArray.push(cleaned);
        });
        return cleanedArray;
    };


    // Retrieves the secret santa groups from inputs.
    function retrieveSantaGroups() {
        var secretSantaGroups = new Array();

        $.each(document.getElementsByName('input'), function (index, input) {
            if (input.value) {
                var groups = cleanArray(input.value.split(";"));
                $.each(groups, function (index, group) {
                    var names = cleanArray(group.split(","));
                    secretSantaGroups.push({ Names: names });
                });
            }
        });
        return secretSantaGroups;
    }


    function callSecretSantaService() {
        var secretSantaGroups = retrieveSantaGroups();

        // Ommitting client side validation for sake of time. Server side input validation should be fine.

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSantasList")',
            data: JSON.stringify({ groups: secretSantaGroups }),
            dataType: "json",
            contentType: 'application/json',
            success: constructResults,
            error: function (error)
            {
                var errorMessage = error.statusText;
                var rows = '<tr><th style=\"background-color:#B22222\">ERROR: ' + error.statusText+'</th></tr>';
                $('#results').html(rows);
            }
        });

    };

    // Will just rebuild the results table with result for sake of time
    function constructResults(results) {

        var rows = '<tr><th>Giver</t><th>Recipient</th></tr>';
        $.each(results, function (index, pair) {
            rows += '<tr><td>' + pair.Giver + '</td><td>' + pair.Recipient + '</td></tr>';
        });
        $('#results').html(rows);

    };
</script>

